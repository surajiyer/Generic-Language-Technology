/*
 * generated by Xtext 2.11.0
 */
package org.xtext.example.mydsl1.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl1.services.MyDslGrammarAccess
import robotmodel.IfStatement
import robotmodel.Script
import robotmodel.Statement

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(Script script, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		script.getName.format;
		for (Statement statement : script.getStatements()) {
			statement.format;
		}
	}

	def dispatch void format(IfStatement ifStatement, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		ifStatement.getIfExpression.format;
		for (Statement statement : ifStatement.getStatements()) {
			statement.format;
		}
		for (Statement statement : ifStatement.getStatements2()) {
			statement.format;
		}
	}
	
	// TODO: implement for WhileStatement, RepeatStatement, TraceCommand, ConstructionStatement, NegatedExpression, BinaryExpression
}
