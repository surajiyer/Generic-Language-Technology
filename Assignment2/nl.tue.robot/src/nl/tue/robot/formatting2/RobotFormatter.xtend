/*
 * generated by Xtext 2.12.0
 */
package nl.tue.robot.formatting2

import com.google.inject.Inject
import nl.tue.robot.services.RobotGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import robotmodel.NegatedExpression
import robotmodel.Script
import robotmodel.Statement

class RobotFormatter extends AbstractFormatter2 {
	
	@Inject extension RobotGrammarAccess

	def dispatch void format(Script script, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		script.getName.format;
		for (Statement statement : script.getCommand()) {
			statement.format;
		}
	}

	def dispatch void format(NegatedExpression negatedExpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		negatedExpression.getNegatedExpression.format;
	}
	
	// TODO: implement for BinaryExpression, IfStatement, WhileStatement, RepeatStatement
}
