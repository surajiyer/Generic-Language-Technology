// automatically generated by Xtext
grammar nl.tue.robot.Robot with org.eclipse.xtext.common.Terminals

import "plugin://glt.robot"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Script:
	'Script' name=Name 'runs' 'as'
		command+=Statement*
	'end';

Statement:
	IfStatement | WhileStatement | RepeatStatement | Comment | TraceCommand | AtomicCommand | ConstructionStatement;
		
NegatedExpression returns Expression:
	{NegatedExpression}
	'not' negatedExpression=Expression
;
		
BinaryExpression returns Expression:
	{BinaryExpression}
	'(' leftExpression=Expression operator=OperatorLiteral rightExpression=Expression ')'
;

HeadingExpression returns Expression:
	{HeadingExpression}
	headingLiteral=HeadingLiteral directionLiteral=DirectionLiteral
;

WallAheadExpression returns Expression:
	{WallAheadExpression}
	wall=WallLiteral ahead=AheadLiteral
;

NormalExpression returns Expression:
	{NormalExpression}
	literal=NormalExpressionLiteral
;

Name: {Name} ID;

terminal RL_COMMENT : '#' !('\n'|'\r')* ('\r'? '\n')?;
Comment: {Comment} command=RL_COMMENT;

IfStatement:
	'if' condition=Expression 'do'
		command+=Statement*
		('else' 'do' command2+=Statement*)?
	'end';

WhileStatement:
	'while' condition=Expression 'do'
		command+=Statement*
	'end';

RepeatStatement:
	'repeat' condition=INT 'times'
		command+=Statement*
	'end';

TraceCommand: 'trace' command=STRING;

AtomicCommand: command=CommandLiteral;

ConstructionStatement:
	command=GridLiteral 'at' 'row:' x=INT "," 'col:' y=INT;

enum OperatorLiteral: and = 'and' | or = 'or';

enum HeadingLiteral: heading = 'heading';

enum DirectionLiteral:
	north = 'north' | south = 'south' | east = 'east' | west = 'west';

enum WallLiteral: wall = 'wall';

enum AheadLiteral: ahead = 'ahead';

enum NormalExpressionLiteral: full = 'full' | mark = 'mark';

enum TraceLiteral: trace = 'trace';

enum CommandLiteral:
	step = 'step' | turnLeft = 'turnLeft' | drop = 'drop' | pick = 'pick';

enum GridLiteral:
	buildWall = 'buildWall' | destroyWall = 'destroyWall' | pickMark = 'pickMark' | dropMark = 'dropMark';